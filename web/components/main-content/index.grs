<template>
  <div styleName='container'>
    <Head styleName='head' v-if='!showSongList'>
      <div styleName='placeholder' slot='placeholder'></div>
    </Head>
    <SongList styleName='content' v-if='showSongList' :id='songListId' :playlist='playlist'/>
    <SearchResult styleName='content' v-show='showSearchResult' :searchValue='this.searchValue'/>
    <DiscoverMusic styleName='content' v-show='showDiscoverMusic'/>
  </div>
</template>

<script>
  import Head from 'web/components/head'
  import Router from 'web/manager/router'
  import Sidebar from 'web/components/sidebar'
  import SongList from 'web/components/song-list'
  import SearchResult from 'web/components/search-result'
  import DiscoverMusic from 'web/components/discover-music'
  window.r = Router
  @Grass.CSSModules(style)
  export default class MainContent extends Grass.Component {
    // #temp
    component = { Head, SongList, SearchResult, DiscoverMusic }

    searchValue = ''

    beforeCreate () {
      const routerCtrs = {
        showSongList: false,
        showSearchResult: false,
        showDiscoverMusic: false,
      }

      this.state = {
        ...routerCtrs,
        songListId: null,
        playlist: {},
      }

      // 注册路由
      this.registerRouter()
    }

    registerRouter () {
      // 搜索页面
      Router.register('Search', val => {
         this.showSpecifiedPage('showSearchResult')
          // 清空歌单数据，避免内存浪费
          this.setState({
            playlist: {},
            songListId: null,
          })
          this.searchValue = val
      })

      // 发现页面
      Router.register('DiscoverMusic', () => {
        this.showSpecifiedPage('showDiscoverMusic')
      })

      // 歌单详情页面
      Router.register('SongList', item => {
        this.showSpecifiedPage('hide')
        this.setState({
          playlist: item,
          songListId: item.id,
          showSongList: true,
        })
      }, true)
    }

    // main content 区域显示指定页面，其余的页面都隐藏
    showSpecifiedPage (pageKey) {
      this.setState(state => {
        const keys = Object.keys(state)
        for (let i = 0; i <  keys.length; i++) {
          if (keys[i].includes('show')) {
            state[keys[i]] = keys[i] === pageKey
          }
        }
      })
    }
  }
</script>