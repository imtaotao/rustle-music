<template>
  <div
    styleName='container'
    @click.self='this.props.hideLoginBox'
  >
    <div styleName='box'>
      <i
        styleName='cross'
        @click='this.props.hideLoginBox'
      ></i>
      <div
        styleName='icon'
        :style='this.getIconStyle()'
      ></div>
      <div styleName='input-container'>
        <input
          type='text'
          styleName='input'
          :value='account'
          @focus='this.clearErrorInfo'
          @change='this.accountChanged'
          :placeholder='"请输入" + (phoneMode ? "手机号" : "邮箱")'
        />
        <input
          type='password'
          styleName='input'
          :value='password'
          placeholder='请输入密码'
          @keydown='this.pressEnter'
          @focus='this.clearErrorInfo'
          @change='this.passwordChanged'
        />
      </div>
      <div styleName='button-container'>
        <div styleName='auto-login'>
          <!-- 自动登录选框 -->
          <input
            id='AutoLogin'
            type='checkbox'
            :checked='autoLogin'
            @change='this.checkboxChanged'
          />
          <label
            for='AutoLogin'
            className='black'
          >
            自动登录
          </label>
          <span v-show='errorInfo'>{{ errorInfo }}</span>
        </div>
        <button
          styleName='button'
          @click='this.login'
          :style='{background: logining ? "#ddd" : ""}'
        >
          登录
        </button>
        <div
          styleName='toogle'
          @click='this.toggle'
        >
          {{ phoneMode ? '邮箱' : '手机' }}登录
        </div>
        <div styleName='tips'>Tips: 可以使用网易云音乐账号登录哦~</div>
      </div>
    </div>
  </div>
</template>

<script>
  import { enter } from 'web/utils'

  @Grass.CSSModules(style)
  export default class LoginBox extends Grass.Component {
    // #temp
    beforeCreate () {
      let data = localStorage.getItem('account')
      data = data ? JSON.parse(data) : {}
      this.state = {
        account: data.account || '',
        password: data.password || '',
        errorInfo: '',
        phoneMode: true,
        logining: false,
        autoLogin: true,
      }
    }

    getIconStyle () {
      const name = this.state.phoneMode
        ? 'phone'
        : 'email'
      return {
        backgroundImage: 'url(' + require(`../../assets/${name}-login.svg`) + ')'
      }
    }

    toggle = e => {
      this.setState({
        errorInfo: '',
        phoneMode: !this.state.phoneMode,
      })
    }

    clearErrorInfo = e => {
      if (this.state.errorInfo) {
        this.setState({errorInfo: ''})
      }
    }

    pressEnter = e => {
      // 等待 state 已经填充完成后再登录
      enter(e, () => setTimeout(this.login))
    }

    checkboxChanged = e => {
      this.state.autoLogin = e.target.checked
    }

    accountChanged = e => {
      this.state.account = e.target.value.trim()
    }

    passwordChanged = e => {
      this.state.password = e.target.value.trim()
    }

    login = e => {
      if (this.state.logining) return
      let type = 'phone'
      const { phoneMode, account, password, autoLogin } = this.state
      if (!account) return this.setState({errorInfo: '请输入账号'})
      if (!password) return this.setState({errorInfo: '请输入密码'})

      if (phoneMode) {
        if (!(/^1[3|4|5|7|8]\d{9}$/g.test(account))) {
          return this.setState({errorInfo: '请输入正确的电话号码'})
        }
      } else {
        type = 'email'
        if (!(/^(\w+)(\.\w+)*@(\w+)(\.\w+)*.(\w+)$/i.test(account))) {
          return this.setState({errorInfo: '请输入正确的邮箱'})
        }
      }

      // 保存账号
      localStorage.setItem('account', JSON.stringify({account, password}))
      this.state.logining = true
      this.forceUpdate()

      const sfn = () => {
        this.setState({logining: false})
        this.props.hideLoginBox()
      }
      const efn = ({body = {}}) => {
        this.setState({
          logining: false,
          errorInfo: body.msg || '登录失败',
        })
      }

      // 登录
      this.props.login(type, account, password, autoLogin).then(sfn, efn)
    }
  }
</script>